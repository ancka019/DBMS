--3.1.1 содержимое системных табличных представлений, доступных в вашей схеме
SELECT * FROM USER_TABLES;

SELECT * FROM ALL_TABLES where rownum <= 10;

--3.1.2 содержимое таблицы, которая видна в ALL_TABLES, но не присутствует в USER_TABLES
-- определяем подходящие таблицы:
 SELECT * FROM ALL_TABLES WHERE TABLE_NAME NOT IN (SELECT TABLE_NAME FROM USER_TABLES);
-- вывод таблицы
SELECT * FROM TABLE_PRIVILEGE_MAP where rownum <= 10;

--3.1.3 таблица со всеми базовыми типами данных (CREATE TABLE...). Убедитесь, что она будет отображаться в табличных представлениях.

CREATE TABLE test  (
    num  NUMBER(2),
    testchar CHAR(5),
    testvarshar VARCHAR2(10),
    testdate DATE,
    testtime TIMESTAMP
);
SELECT * FROM USER_TABLES;
DROP TABLE test;

--3.2.1 
--создание таблиц
CREATE TABLE ROUTES  (
    ROUTEID  NUMBER(3) NOT NULL,
    ROUTENAME VARCHAR2(10) NOT NULL,
    ROUTELENGHT NUMBER
);
CREATE TABLE SALEPOINT  (
    ROUTEID NUMBER(3) NOT NULL,
    SALEPOINTID NUMBER(3) NOT NULL,
    SALEPOINTNAME VARCHAR2(10)
);

CREATE TABLE PRODUCT  (
    ROUTEID  NUMBER(3) NOT NULL,
    PRODUCTID NUMBER(4) NOT NULL,
    BUILDDATE DATE
);

ALTER TABLE ROUTES ADD CONSTRAINT route_pk PRIMARY KEY (ROUTEID);
ALTER TABLE SALEPOINT ADD CONSTRAINT salepoint_pk PRIMARY KEY (SALEPOINTID);

ALTER TABLE PRODUCT ADD CONSTRAINT product_pk PRIMARY KEY (PRODUCTID);
ALTER TABLE SALEPOINT ADD CONSTRAINT SALEPOINT_ROUTE_FK FOREIGN KEY (ROUTEID) REFERENCES ROUTES (ROUTEID);

ALTER TABLE PRODUCT ADD CONSTRAINT PRODUCT_ROUTE_FK FOREIGN KEY (ROUTEID) REFERENCES ROUTES (ROUTEID);
ALTER TABLE ROUTES ADD CONSTRAINT check_route_lenght CHECK (ROUTELENGHT > 0);
INSERT INTO ROUTES
(ROUTEID, ROUTENAME, ROUTELENGHT)
VALUES
(1, '123', 10);
INSERT INTO ROUTES
(ROUTEID, ROUTENAME, ROUTELENGHT)
VALUES
(1, '124', 10);
INSERT INTO ROUTES
(ROUTEID, ROUTENAME, ROUTELENGHT)
VALUES
(2, '127', -1);
INSERT INTO ROUTES
(ROUTEID, ROUTENAME, ROUTELENGHT)
VALUES
(3, '3', 5);

INSERT INTO SALEPOINT
(ROUTEID, SALEPOINTID, SALEPOINTNAME)
VALUES
(1, 2, 'bank2');
INSERT INTO SALEPOINT
(ROUTEID, SALEPOINTID, SALEPOINTNAME)
VALUES
(1, 2, 'bank2');
INSERT INTO SALEPOINT
(ROUTEID, SALEPOINTID, SALEPOINTNAME)
VALUES
(2, 3, 'bank3');

INSERT INTO PRODUCT
(ROUTEID, PRODUCTID, SEATS)
VALUES
(1, 5519, 40);
INSERT INTO PRODUCT
(ROUTEID, PRODUCTID)
VALUES
(3, 5520);

DROP TABLE SALEPOINT;
DROP TABLE PRODUCT;
DROP TABLE ROUTES;

--3.2.2 содержимое системных представлений правил целостности в вашей схеме (в APEX). Сколько правил целостности в вашей схеме?
SELECT * FROM USER_CONSTRAINTS;

SELECT COUNT(*) FROM USER_CONSTRAINTS;

--3.2.3 правило целостности к таблице EMP(без явного именования), ограничивающее размер зарплаты: (500 <=sal<=5000). 
ALTER TABLE EMP ADD CHECK (SAL >= 500 AND SAL <= 5000);
--Убедитесь, что оно будет отображаться в соответствующем системном представлении. 
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'EMP';
--Напишите запрос, который выводит имя этого правила целостности.
SELECT constraint_name  FROM USER_CONSTRAINTS where  search_condition_vc='5000>=SAL AND SAL>=500'
--Удалите это правило целостности.
alter table emp drop  constraint SYS_C00124948281;

--3.2.4
ALTER TABLE EMP DROP CONSTRAINT CHECK_SAL;
ALTER TABLE EMP ADD CONSTRAINT CHECK_SAL CHECK (SAL >= 500 AND SAL <= 5000);
ALTER TABLE EMP DROP CONSTRAINT CHECK_SAL;

--3.3.1 содержимое представлений, связанных с индексами в своей схеме.
SELECT * FROM USER_INDEXES;
--количество индексов в своей схеме
SELECT COUNT(*) FROM USER_INDEXES;

--Создайте индексно-организованную таблицу DEPT1 (аналогичную таблице DEPT). Заполните ее содержимым из DEPT.
CREATE TABLE DEPT1
(
    DEPTNO NUMBER(2,0) NOT NULL ENABLE,
	DNAME VARCHAR2(50),
	LOC VARCHAR2(50),
	CONSTRAINT DEPT1_PK PRIMARY KEY (DEPTNO)
    USING INDEX  ENABLE
)
ORGANIZATION INDEX;

INSERT INTO DEPT1;
SELECT * FROM DEPT;

DROP TABLE DEPT1;
